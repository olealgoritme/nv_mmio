// --------------------------------------------------------------------------------
//                          KEY LEGEND
// --------------------------------------------------------------------------------
// 
// Each define in the .ref file has a 5 field code to say what kind of define it is: i.e. [> RW--R <]
// The following legend shows accepted values for each of the 5 fields:
//   Read, Write, Internal State, Declaration/Size, and Define Indicator.
// 
//   Read
//     ' ' = Other Information
//     '-' = Field is part of a write-only register
//     'C' = Value read is always the same, constant value line follows (C)
//     'R' = Value is read
// 
// 
//   Write
//     ' ' = Other Information
//     '-' = Must not be written (D), value ignored when written (R,A,F)
//     'W' = Can be written
// 
// 
//   Internal State
//     ' ' = Other Information
//     '-' = No internal state
//     'X' = Internal state, initial value is unknown
//     'I' = Internal state, initial value is known and follows (I), see "Reset Signal" section for signal.
//     'E' = Internal state, initial value is known and follows (E), see "Reset Signal" section for signal.
//     'B' = Internal state, initial value is known and follows (B), see "Reset Signal" section for signal.
//     'C' = Internal state, initial value is known and follows (C), see "Reset Signal" section for signal.
// 
//     'V' = (legacy) Internal state, initialize at volatile reset
//     'D' = (legacy) Internal state, default initial value at object creation (legacy: Only used in dev_ram.h)
//     'C' = (legacy) Internal state, initial value at object creation
//     'C' = (legacy) Internal state, class-based initial value at object creation (legacy: Only used in dev_ram.h)
// 
// 
//   Declaration/Size
//     ' ' = Other Information
//     '-' = Does Not Apply
//     'V' = Type is void
//     'U' = Type is unsigned integer
//     'S' = Type is signed integer
//     'F' = Type is IEEE floating point
//     '1' = Byte size (008)
//     '2' = Short size (016)
//     '3' = Three byte size (024)
//     '4' = Word size (032)
//     '8' = Double size (064)
// 
// 
//   Define Indicator
//     ' ' = Other Information
//     'C' = Clear value
//     'D' = Device
//     'L' = Logical device.
//     'M' = Memory
//     'R' = Register
//     'A' = Array of Registers
//     'F' = Field
//     'V' = Value
//     'T' = Task
//     'P' = Phantom Register
// 
//     'B' = (legacy) Bundle address
//     'G' = (legacy) General purpose configuration register
//     'C' = (legacy) Class
// 
//   Reset signal defaults for graphics engine registers.
//     All graphics engine registers use the following defaults for reset signals:
//      'E' = initialized with engine_reset_
//      'I' = initialized with context_reset_
//      'B' = initialized with reset_IB_dly_
// 
//   Reset signal
//     For units that differ from the graphics engine defaults, the reset signals should be defined here:
